DROP TABLE IF EXISTS comment_hashtags;
DROP TABLE IF EXISTS post_hashtags;
DROP TABLE IF EXISTS hashtags;
DROP TABLE IF EXISTS comment_mention;
DROP TABLE IF EXISTS post_mention;
DROP TABLE IF EXISTS comment_likes;
DROP TABLE IF EXISTS post_likes;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS media_items;
DROP TABLE IF EXISTS filters;
DROP TABLE IF EXISTS posts;
DROP TABLE IF EXISTS followers;
DROP TABLE IF EXISTS places;
DROP TABLE IF EXISTS login_activity;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  full_name VARCHAR(255) NOT NULL,
  username VARCHAR(50) UNIQUE NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  profile_photo VARCHAR(255),
  phone VARCHAR(15) UNIQUE,
  website VARCHAR(255),
  bio VARCHAR(255),
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  archived BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE login_activity (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  latitude DECIMAL(8,6),
  longitude DECIMAL(9,6),
  accuracy INTEGER,
  platform VARCHAR(255),
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE followers (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  follower_id INTEGER NOT NULL,
  following_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (follower_id) REFERENCES users(id),
  FOREIGN KEY (following_id) REFERENCES users(id)
);

CREATE TABLE places (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  latitude DECIMAL(8,6) NOT NULL,
  longitude DECIMAL(9,6) NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  archived BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE filters (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL
);


CREATE TABLE posts (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  place_id INTEGER,
  caption VARCHAR(255) NOT NULL, -- DENORMALIZATION
  description TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  archived BOOLEAN NOT NULL DEFAULT false,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (place_id) REFERENCES places(id) ON DELETE SET NULL
);

CREATE TABLE media_items (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  post_id INTEGER NOT NULL,
  `type` CHAR(5) NOT NULL,
  `order` FLOAT NOT NULL DEFAULT 1,
  `url` VARCHAR(255) NOT NULL,
  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);

CREATE TABLE comments (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  post_id INTEGER NOT NULL,
  message VARCHAR(1000) NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);

CREATE TABLE post_likes (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  post_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);
  
CREATE TABLE comment_likes (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  comment_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (comment_id) REFERENCES comments(id) ON DELETE CASCADE
);


CREATE TABLE post_mention (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  post_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);


CREATE TABLE comment_mention (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  comment_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (comment_id) REFERENCES comments(id) ON DELETE CASCADE
);

CREATE TABLE hashtags (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  tag VARCHAR(255) UNIQUE NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE comment_hashtags (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  hashtag_id INTEGER NOT NULL,
  comment_id INTEGER NOT NULL,
  FOREIGN KEY (hashtag_id) REFERENCES hashtags(id),
  FOREIGN KEY (comment_id) REFERENCES comments(id) ON DELETE CASCADE
);

CREATE TABLE post_hashtags (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  hashtag_id INTEGER NOT NULL,
  post_id INTEGER NOT NULL,
  FOREIGN KEY (hashtag_id) REFERENCES hashtags(id),
  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);
